name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Debug environment
      run: |
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        echo "Jest config check:"
        ls -la jest.* || echo "No jest config files found"
        echo "Package.json test scripts:"
        npm run --silent | grep test || echo "No test scripts found"
      
    - name: Validate package.json
      run: npm run validate
      
    - name: Run linting
      run: npm run lint
      
    - name: Check formatting
      run: npm run format -- --check
      
    - name: Run unit tests
      run: npm run test:unit
      
    - name: Run HTTP server tests
      run: npm run test:http
      
    - name: Run integration tests
      run: npm run test:integration --verbose
      env:
        # Allow integration tests to access external URLs
        NODE_TLS_REJECT_UNAUTHORIZED: 0
        
    - name: Test server startup
      run: |
        timeout 10s npm start &
        PID=$!
        sleep 5
        kill $PID || true
        echo "Server startup test completed"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for outdated dependencies
      run: npx npm-check-updates --errorLevel 2

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create distribution package
      run: |
        mkdir -p dist
        cp server.js dist/
        cp package.json dist/
        cp LICENSE dist/
        cp README.md dist/
        cp -r node_modules dist/ || echo "Skipping node_modules copy"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mcp-server-${{ github.sha }}
        path: dist/
        retention-days: 30
